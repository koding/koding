commands:
  create_post_dir:
    command: "mkdir -p /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true
files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo "switching to /var/app/current"
      cd /var/app/current
      source /etc/profile

      echo "setting ulimit"
      ulimit -n 10000
      rm -rf ./node_modules

      echo "loading npm modules"
      HOME=/home/user-ec2 npm cache clean
      HOME=/home/user-ec2 npm i --unsafe-perm

      HOME=/home/user-ec2 npm i -g gulp

      echo "build client"
      ./run

      ./scripts/reset-node-modules.sh
      ./scripts/patch-node-modules.sh

      export GOPATH=/var/app/current/go/bin
      echo "build go binaries"
      go/build.sh

      echo "build social api"
      echo "cwd: go/src/socialapi"
      cd ./go/src/socialapi
      make configure
      make install
      make build

      chown -R webapp:webapp /var/app/current

      cd /var/app/current


  "/opt/elasticbeanstalk/hooks/appdeploy/post/02init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo  "installing supervisord"
      easy_install supervisor || echo "supervisord is already installed"

      echo  "installing superlance"
      easy_install superlance || echo "superlance is already installed"

      echo "adding supervisord to startup scripts"
      cp /var/app/current/deployment/supervisord_initd.conf /etc/rc.d/init.d/supervisord
      chmod +x /etc/rc.d/init.d/supervisord
      chkconfig --add supervisord

      echo "create log folders"
      mkdir -p /var/log/supervisord/
      mkdir -p /var/log/koding/
      echo "created log folders"

      echo "running with new supervisord config"
      cp /var/app/current/deployment/generated_files/supervisord.conf /etc/supervisord.conf
      ulimit -n 65535
      service supervisord restart
      echo "updated supervisord config"


  "/opt/elasticbeanstalk/hooks/appdeploy/post/03init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      echo "stopping httpd if exists"
      service httpd stop || echo "httpd is stopped"

      echo "updating ngnix configuration"

      echo "moving nginx config"
      cp /var/app/current/deployment/generated_files/nginx.conf /etc/nginx/
      echo "updated nginx config"

      echo 'koding:$apr1$K17a7D.N$vuaxDfc4kJvHAg7Id43wk1' > /etc/nginx/conf.d/.htpasswd
      echo 'USER3489:$apr1$52wVqnxi$eVUrgOn8oRfPQRG8vU8jE0' >> /etc/nginx/conf.d/.htpasswd

      echo "starting ngnix with current config"
      service nginx start

      echo "reloading ngnix with current config"
      service nginx reload
      echo "restarted nginx"

  "/opt/elasticbeanstalk/hooks/appdeploy/post/04init.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh

      CONTAINER_CONFIGURATION=/opt/elasticbeanstalk/deploy/configuration/containerconfiguration
      grep -oP 'EB_ENV_NAME=\K([A-Za-z0-9]*-[A-Za-z0-9]*)' $CONTAINER_CONFIGURATION > /var/app/current/EB_ENV_NAME

      /var/app/current/scripts/announce-version

  "/opt/elasticbeanstalk/hooks/appdeploy/post/99stop_all_services_if_proxy.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh

      EB_ENV_NAME=`cat /var/app/current/EB_ENV_NAME`
      if [ "$EB_ENV_NAME" != "koding-proxy" ]; then
        exit 0
      fi

      echo "detected a proxy machine"
      echo "shutting down all worker services..."

      echo "stopping supervisor processes"
      supervisorctl stop all

      echo "stopping supervisord"
      service supervisord stop
