commands:
  create_post_dir:
    command: "mkdir -p /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true
files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/010_set_koding_env_vars.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      
      EB_APP_DEPLOY_DIR=$(/opt/elasticbeanstalk/bin/get-config container -k app_deploy_dir)
      cd $EB_APP_DEPLOY_DIR
      cp .env.sh /etc/profile.d/koding_envvars.sh
      cp .env.json /etc/profile.d/koding_envvars.json

  "/opt/elasticbeanstalk/hooks/appdeploy/post/010_monitor_nginx_pid.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      set -xe
      /opt/elasticbeanstalk/bin/healthd-track-pidfile --proxy nginx

  "/opt/elasticbeanstalk/hooks/appdeploy/post/020_set_env_vars.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      /opt/ami-scripts/eb/set_env_vars.sh
      /opt/ami-scripts/eb/set_hostname.sh

  "/opt/elasticbeanstalk/hooks/appdeploy/post/030_configure_papertrail.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      # check if we are safe to continue      
      [[ -z $KONFIG_PAPERTRAIL_DESTINATION ]] && echo "KONFIG_PAPERTRAIL_DESTINATION" is required && exit 1
      [[ -z $KONFIG_PAPERTRAIL_TOKEN ]] && echo "KONFIG_PAPERTRAIL_TOKEN" is required && exit 1

      # register, configure and restart
      export PAPERTRAIL_DESTINATION=$KONFIG_PAPERTRAIL_DESTINATION
      export PAPERTRAIL_TOKEN=$KONFIG_PAPERTRAIL_TOKEN
      /opt/ami-scripts/eb/configure_papertrail.sh


  "/opt/elasticbeanstalk/hooks/appdeploy/post/040_register_to_objectrocket.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      [[ -z $EB_ENV_NAME ]] && echo "EB_ENV_NAME" is empty && exit 1

      if [ "$EB_ENV_NAME" != "koding-sandbox" ]; then
        $EB_APP_DEPLOY_DIR/scripts/add_public_ip_to_objectrocket.sh
      fi


  "/opt/elasticbeanstalk/hooks/appdeploy/post/050_configure_datadog.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      # check if we are safe to continue
      [[ -z $KONFIG_DATADOG_API_KEY ]] && echo "KONFIG_DATADOG_API_KEY" is required && exit 1

      # register, configure and restart
      export DATADOG_API_KEY=$KONFIG_DATADOG_API_KEY
      /opt/ami-scripts/eb/configure_datadog.sh


  "/opt/elasticbeanstalk/hooks/appdeploy/post/060_deploy_koding.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      cd $EB_APP_DEPLOY_DIR

      export HOME=/home/ec2-user

      rm -rf ./node_modules

      echo "loading npm modules"
      npm cache clean
      npm install --unsafe-perm --production
      npm install --global gulp

      ./run

      ./scripts/reset-node-modules.sh
      ./scripts/patch-node-modules.sh

      export GOPATH=$EB_APP_DEPLOY_DIR/go/bin
      echo "build go binaries"
      go/build.sh

      echo "build social api"
      echo "cwd: go/src/socialapi"
      cd ./go/src/socialapi
      make configure
      make install
      make build

      chown -R $EB_APP_USER:$EB_APP_USER $EB_APP_DEPLOY_DIR


  "/opt/elasticbeanstalk/hooks/appdeploy/post/070_configure_nginx.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      echo "stopping httpd if exists"
      service httpd stop || echo "httpd is stopped"

      echo 'koding:$apr1$K17a7D.N$vuaxDfc4kJvHAg7Id43wk1' >/etc/nginx/conf.d/.htpasswd
      echo 'USER3489:$apr1$52wVqnxi$eVUrgOn8oRfPQRG8vU8jE0' >>/etc/nginx/conf.d/.htpasswd


  "/opt/elasticbeanstalk/hooks/appdeploy/post/080_configure_supervisord.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      source /etc/profile

      cd $EB_APP_DEPLOY_DIR

      ./run exec supervisorctl stop all

      echo "running with new supervisord config"
      cp deployment/generated_files/supervisord.conf /etc/supervisord.conf

      service supervisord restart
      echo "updated supervisord config"


  "/opt/elasticbeanstalk/hooks/appdeploy/post/090_cleanup.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      rm -rf /tmp/npm*
