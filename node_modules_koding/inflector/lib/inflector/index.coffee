module.exports = class Inflector
  # contrib
  inflection = require './dep/inflection'

  aliases = { slugify : 'dasherize' }

  for own alias, orig of aliases
    inflection[alias] = inflection[orig]

  Object
    .keys(inflection)
    .forEach (key) ->
      # copy of the properties of inflection.
      Inflector[key] = inflection[key]
      # add chainable methods to the prototype:
      Inflector::[key] = ->
        @value = Inflector[key] @value, arguments...
        this

  constructor:(value) ->
    unless this instanceof Inflector
      return new Inflector value
    @value = value

  tap:(callback) ->
    callback @value
    this

  inspect: -> this + ''

  toString: -> @value

  valueOf: -> @value
