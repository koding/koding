underscore = require 'underscore'

module.exports = class Pipeline

  empty = []
  for method in 'forEach,indexOf,join,pop,reverse,shift,sort,splice,unshift,push'.split ','
    this::[method] = empty[method]

  for method in ('first,initial,last,rest,compact,flatten,without,union,'+
                 'intersection,difference,uniq,zip,lastIndexOf,range').split ','
    this::[method] = do (method) ->
      -> underscore[method] this, arguments...

  constructor:(pipeline, @queue, callback) ->
    @length = 0
    @push [].slice.call(pipeline)... if pipeline.length
    Object.defineProperty this, 'callback', { value: callback }

  root: -> @first()?.nodes?[0]
