bongo = require 'bongo'
{ Graphlet, Relationship } = require '../../lib'

{ Account, Message, Reply } = require './models'

bongo.setClient 'localhost:27017/test'

count = 0

makeSelection = ->

  Account.one { email: 'user123@koding.me' }, (err, account) ->
    throw err if err

    account?.beginGraphlet()

        .edges
          query         :
            targetName  : 'Message'

        .nodes()

        .edges
          query         :
            targetName  : 'Reply'

        .nodes
          limit           : 5
          sort            :
            'meta.votes'  : -1

      .endGraphlet()
      .then (err, pipeline) ->
        throw err if err
        { graphlet } = pipeline.last()
        console.log graphlet[0] is account
        console.log account.messages[0].replies[0]

initializeExample = do (makeSelection) ->

  targetTypes = ['Message', 'Reply', 'Wallet', 'DatabaseMySql', 'DatabaseCouch', 'DatabaseMongo']
  len = targetTypes.length
  id = new bongo.ObjectId

  bongo.sequence (err, docs, i, next) ->
    throw err if err
    [next, docs] = [docs, next] unless next
    account = new Account
      nickname: "user #{i}"
      email: "user#{i}@koding.me"
    account.save (err, docs) ->
      throw err if err
      message = new Message
        title : "Message #{i}"
        body  : 'lorum ipsum text'
      message.save (err, docs) ->
        account.addMessage message, (err) ->
          reply = new Reply
            title : "Reply 0 of #{i}"
            body  : 'Lorum ipsum text...'
          reply.save (err) ->
            message.addReply reply, next
  , makeSelection

Relationship.count (err, count) ->
  if count is 0
    # add 1000 semi-random relationships
    initializeExample null, undefined, i for i in [0...1000]
  else
    makeSelection()
