Bongo = require 'bongo'

module.exports =-> bongoMixin.call Bongo.prototype

### where bongo mixin looks like: ###

bongoMixin = ->
  Bongo.prototype.on 'newInstance', (instance)->
    {Relationship} = require 'jraphical'
    Relationship.addBongo instance
  oldHandleEvent = @handleEvent
  @handleEvent = (rest...)->
    return  unless @mq?

    eventType = rest[0]
    eventName = rest[2]

    neo4jExchangeOptions =
      deliveryMode : 2
      autoDelete   : no
      durable      : yes

    if eventName?
      switch eventName
        when "updateInstance"
          if eventType == "static"
            data =  { event : eventName, payload : [rest[3]]}
            @mq.emit 'graphFeederExchange', "", JSON.stringify(data), neo4jExchangeOptions

          if eventType == "instance"
            data =  { event : eventName, payload : [rest[1]]}
            @mq.emit 'graphFeederExchange', "", JSON.stringify(data), neo4jExchangeOptions

        when "RelationshipSaved", "RelationshipRemoved", "RemovedFromCollection"
          data =  { event : eventName, payload : rest[3]}
          @mq.emit 'graphFeederExchange', "", JSON.stringify(data), neo4jExchangeOptions

    oldHandleEvent.apply this, rest
