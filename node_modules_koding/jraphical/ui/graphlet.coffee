class Graphlet
  constructor:(@seed) ->
    @nodes = []
    for gen in seed
      for nodeData in gen
        @nodes.push new @Node(nodeData).draw()

  appendTo:(ele) ->
    ele.appendChild node.canvas for node in @nodes


class Graphlet::Shape
  getContext:(w, h) ->
    @canvas = document.createElement 'canvas'
    @canvas.width = w
    @canvas.height = h
    @canvas.getContext '2d'


class Graphlet::Node extends Graphlet::Shape
  constructor:(data) ->
    { @parent, @title, @description, @role } = data

  draw: (w = 150, h = 75) ->
    x = 1
    y = 1
    ctx = @getContext w, h

    w -= 2
    h -= 2
    kappa = .5522848
    ox = (w / 2) * kappa
    oy = (h / 2) * kappa
    xe = x + w
    ye = y + h
    xm = x + w / 2
    ym = y + h / 2

    ctx.fillStyle = 'rgb(230,230,230)'
    ctx.beginPath()
    # ctx.beginFill()
    ctx.moveTo x, ym
    ctx.bezierCurveTo x, ym - oy, xm - ox, y, xm, y
    ctx.bezierCurveTo xm + ox, y, xe, ym - oy, xe, ym
    ctx.bezierCurveTo xe, ym + oy, xm + ox, ye, xm, ye
    ctx.bezierCurveTo xm - ox, ye, x, ym + oy, x, ym
    ctx.closePath()
    ctx.stroke()
    ctx.fill()


    ctx.fillStyle = 'rgb(0,0,100)'
    ctx.font = '14pt Verdana'
    ctx.textAlign = 'center'
    ctx.fillText @title, x + w / 2, y + h / 2

    this

@Graphlet = Graphlet
