assert = require 'assert'

signature = require '../lib/signature'

{ Rest } = signature

{ ObjectId } = require '../lib/bongo'

assert Rest().isRest is true

assert \
  signature(Number)
    .spread(1) is true

assert \
  signature(Number, Boolean)
    .spread(1, false) is true

assert \
  signature(Number, Boolean)
    .spread(false, 1) is false

assert \
  signature(Number, Boolean, Function)
    .spread(false, 1, (->)) is false

assert \
  signature([String], Boolean, Function)
    .spread(['foo', 'bar'], true, (->)) is true

assert \
  signature([String], Boolean, Function)
    .spread([1, 1], true, (->)) is false

assert \
  signature([Number], Boolean, Function)
    .spread([1, 1], true, (->)) is true

assert \
  signature([Number], Boolean, Function)
    .spread([1, 1, false], true, (->)) is false

assert \
  signature(String)
    .spread('hello') is true

assert \
  signature(String, [String])
    .spread('hello', ['hello', 'there']) is true

assert \
  signature(String)
    .spread(1) is false

assert \
  signature(String)
    .spread('fun', ['fun', Infinity]) is false

assert \
  signature(Rest(String), Function)
    .spread('foo', 'bar', 'baz', (->)) is true

assert \
  signature(Number, Rest(String), Function)
    .spread(28, 'foo', 'bar', 'baz', (->)) is true

assert \
  signature(Number, Rest(String), Function)
    .spread(28, 'foo', 22, 'baz', (->)) is false

assert \
  signature(Number, Rest(String), Function)
    .spread(28, 'foo', 'bar', -Infinity, (->)) is false

assert \
  signature(Object)
    .spread({}) is true

assert \
  signature(Object, Rest(Object), Function)
    .spread({}, {}, {}, (->)) is true

assert \
  signature(Object, Rest(Object), Function)
    .spread({}, (->)) is true

assert \
  signature(ObjectId, Function)
    .spread(ObjectId().toString(), (->))

assert \
  signature([ObjectId], Function)
    .spread([ObjectId().toString(), ObjectId().toString()], (->))
