
class FutureLayer
  contexts = []
  futures = []

  constructor:(context) ->

    for currentContext, index in contexts when context is currentContext
      future = futures[index]
      future.fns.push fn
      return future

    @fns      = []
    @args     = []
    @pipeline = null
    @context  = context

    contexts.push context
    futures.push this

    for methodName in methods context
      @[methodName] = @method context[methodName]

  then: ->
    console.log @fns

  addFn = (fn, next) ->
    @fns.push (rest...) ->
      rest.push next this
      fn.apply this, rest
      this
    this

  method:(method) ->
    addFn.bind this, method, next = (future) ->
      nextMethod = future.fns.shift()
      args = future.args.shift()
      if fn?
        fn.bind future, args
      else
        ->
