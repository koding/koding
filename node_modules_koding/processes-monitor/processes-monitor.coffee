getRandomInt = (min, max) ->
  return Math.floor(Math.random() * (max - min + 1)) + min

getRandom3DigitPrime = ->
  primes = [127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229]
  return primes[getRandomInt(0, primes.length - 1)]

flipped = (fn) -> -> fn.apply this, [ arguments... ].reverse()

repeat  = flipped setInterval
wait    = flipped setTimeout


module.exports =
  start : (options) ->
    { interval, name } = options

    if process.send
      process.send? { name, alive: yes }

    dieTimerSet = no

    repeat interval ? 1000, ->
      { rss, heapTotal, heapUsed } = process.memoryUsage()
      # communicating to parent supervisor
      data =
        'process-monitor' : yes
        name              : name
        mem               :
          rss             : rss        / (1024 * 1024) | 0
          heapTotal       : heapTotal  / (1024 * 1024) | 0
          heapUsed        : heapUsed   / (1024 * 1024) | 0
          unit            : 'MB'
        uptime            : process.uptime() | 0

      try process.send? data
      catch e
        console.warn 'process-monitor process.send() failed'
        return

      if options.limit_hard?.memory < data.mem.rss
        options.limit_hard.callback name, 'Exceeded hard memory limit', data

      if options.limit_soft?.memory < data.mem.rss
        options.limit_soft.callback name, 'Exceeded soft memory limit', data

      if options.die? and not dieTimerSet

        dieTimerSet = yes

        { middlewareTimeout, middleware, after } = options.die

        if 'string' is typeof after
          afterMins = getRandom3DigitPrime()
          after = afterMins * 1000 * 60
          console.log "[PROCESS-MONITOR][#{name}] is assigned a non-overlapping lifetime. (#{afterMins} mins)"

        wait after, ->
          console.log "[PROCESS-MONITOR][#{name}] feeling suicidal...", process.pid

          if 'function' is typeof middleware

            middleware name, (err, res) ->
              process.exit()

            if middlewareTimeout
              wait middlewareTimeout, ->
                console.log "[PROCESS-MONITOR][#{name}] die.middleware didn't return the callback within #{options.die.middlewareTimeout} it will die now."
                process.exit()

          else process.exit()
