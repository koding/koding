#!/bin/bash

### PREPARE ###

# docker pull koding/mongo
# docker pull koding/postgres
# docker pull koding/rabbitmq
# docker pull koding/redis
# docker build --no-cache -t koding/run .

# Remove all stopped containers.
# docker stop $(docker ps -a -q)
# docker rm -f $(docker ps -a -q)


# stop all
./cleanup

# Remove all untagged images
# docker rmi $(docker images | grep "^<none>" | awk "{print $3}")

### RUN ###

PRJ=/opt/koding       # `pwd`
BLD=/root/BUILD_DATA        # /BUILD_DATA
CFG=`cat $BLD/BUILD_CONFIG`
RGN=`cat $BLD/BUILD_REGION` 
HST=`cat $BLD/BUILD_HOSTNAME`
SUB="${HST%%.*}"

PBKEY=$PRJ/certs/test_kontrol_rsa_public.pem
PVKEY=$PRJ/certs/test_kontrol_rsa_private.pem
GB=$PRJ/go/bin
SOCIALCONFIG=./go/src/socialapi/config/docker.toml

NAME=mongo              && docker run                 -h $SUB -d --name=$NAME  --entrypoint=mongod  koding/mongo    --dbpath /root/data/db --smallfiles --nojournal
NAME=postgres           && docker run                 -h $SUB -d --name=$NAME  										  koding/postgres
NAME=rabbitmq           && docker run                 -h $SUB -d --name=$NAME                       koding/rabbitmq
NAME=redis              && docker run                 -h $SUB -d --name=$NAME                       koding/redis    redis-server

sleep 5

NAME=logger             && docker run  -p 8000:8000		-h $SUB -d --name=$NAME  -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout syslog://logs.papertrailapp.com:49069
NAME=kontrol            && docker run  -p 4000:4000   -h $SUB -d --name=$NAME  --entrypoint=$GB/kontrol                                          														--link=mongo:mongo 																																		  koding/run  -c $CFG -r $RGN
NAME=kloud              && docker run  -p 3000:3000   -h $SUB -d --name=$NAME  --entrypoint=$GB/kloud                                            														--link=mongo:mongo 												  --link=redis:redis 												  koding/run  -c $CFG -r $RGN --port 3000 -env prod -public-key $PBKEY -private-key $PVKEY #-kontrol-url "http://$HST:4000/kite"
NAME=rerouting          && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/rerouting                                        														  																														 --link=rabbitmq:rabbitmq koding/run  -c $CFG
NAME=cronJobs           && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/cron                                             														--link=mongo:mongo  											  --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $CFG
NAME=broker             && docker run  -p 8008:8008   -h $SUB -d --name=$NAME  --entrypoint=$GB/broker                                           																						     											  --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $CFG
NAME=proxy              && docker run  -p 4001:4001   -h $SUB -d --name=$NAME  --entrypoint=$GB/reverseproxy                                     																							 												  								    												koding/run  -region $RGN -port 4001 -env production -publicHost $HST -publicPort 4001



NAME=socialapi          && docker run  --expose=7000  -h $SUB -d --name=$NAME  --entrypoint=$GB/api               -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG -port 7000
NAME=dailymailnotifier  && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/dailymailnotifier -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=notification       && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/notification      -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=popularpost        && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/popularpost       -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=populartopic       && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/populartopic      -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=realtime           && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/realtime          -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=sitemapfeeder      && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/sitemapfeeder     -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=topicfeed          && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/topicfeed         -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG
NAME=trollmode          && docker run                 -h $SUB -d --name=$NAME  --entrypoint=$GB/trollmode         -e "SOCIAL_API_HOSTNAME=$HST"  														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  -c $SOCIALCONFIG

NAME=webserver          && docker run  -p 80:80       -h $SUB -d --name=$NAME  --entrypoint=node                                                 --link=socialapi:socialapi  --link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/server/index.js                   -c $CFG -p 80   --disable-newrelic
NAME=authWorker         && docker run                 -h $SUB -d --name=$NAME  --entrypoint=node                                                 --link=socialapi:socialapi  --link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/workers/auth/index.js             -c $CFG
NAME=social             && docker run  -p 3030:3030   -h $SUB -d --name=$NAME  --entrypoint=node                                                 --link=socialapi:socialapi  --link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/workers/social/index.js           -c $CFG -p 3030 --disable-newrelic --kite-port=13020

NAME=sourceMapServer    && docker run  -p 3526:3526   -h $SUB -d --name=$NAME  --entrypoint=node                                                 														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/server/lib/source-server/index.js -c $CFG -p 3526
NAME=guestCleaner       && docker run                 -h $SUB -d --name=$NAME  --entrypoint=node                                                 														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/workers/guestcleaner/index.js     -c $CFG
NAME=emailSender        && docker run                 -h $SUB -d --name=$NAME  --entrypoint=node                                                 														--link=mongo:mongo --link=postgres:postgres --link=redis:redis --link=rabbitmq:rabbitmq koding/run  $PRJ/workers/emailsender/index.js      -c $CFG

NAME=permissionUpdater  && docker run                 -h $SUB -d --name=$NAME  --entrypoint=node  --link=mongo:mongo koding/run  $PRJ/scripts/permission-updater -c $SOCIALCONFIG --hard














