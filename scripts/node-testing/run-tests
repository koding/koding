#!/usr/bin/env coffee
# this file runs shell-scripts on the test instance(s) via ssh

if process.env.DISABLE_TESTS
  console.log "Tests are disabled"
  return

{ exec }                           = require 'child_process'
{ getNextInstancePublicIpAddress } = require './helper'

async                             = require 'async'
shellCommands                     = require './shell-commands'


addEventListenersToChildProcess = (child) ->

  output = ''

  child.stdout.on 'data', (data) ->
    output += data

  child.stderr.on 'data', (data) ->
    output += data

  child.on 'exit', (code) ->
    process.stdout.write output

    # if child exits with a non-zero code, exit the main process as well
    if code isnt 0
      console.log "exited child process with code #{code}"
      process.exit code


iterator = (item, cb) ->

  child = exec item, (err, stdout, stderr) ->

    console.log "---------exec error: ---------\n[#{err}]"  if err

    # passing err parameter null
    cb(null)

  addEventListenersToChildProcess child


# runs shell scripts in series in test instance via ssh
start = ->

  unless instanceData = process.argv[2]
    console.error 'error: instance data file is not specified'
    process.exit 1

  # if there is only one instance, run both tests in the same instance
  shellCommandsArray = shellCommands.asArray {
    socialWorker    : getNextInstancePublicIpAddress instanceData
    nodejsWebServer : getNextInstancePublicIpAddress instanceData
  }

  async.each shellCommandsArray, iterator, (err) ->
    console.log err  if err
    process.exit()


start()



