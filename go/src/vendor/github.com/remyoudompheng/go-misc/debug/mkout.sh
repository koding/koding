#!/bin/bash

if [[ -z "$GOROOT" ]]; then
    GOROOT=$(go env GOROOT)
fi

function gen() {
cat <<EOF
// +build ignore

package go${GOCHAR}

// #include <u.h>
// #include <${GOCHAR}.out.h>
import "C"
EOF

echo "const ("
cat $GOROOT/src/cmd/${GOCHAR}l/${GOCHAR}.out.h |
sed -n -r '
    /^\s+A[A-Z]+/ { s/\s+(A\w+),?/\t\1 = C.\1/; p }
    /^\s+D_\w+/ { s/\s+(D_\w+).*/\t\1 = C.\1/; p }
    /^\s+T_\w+/ { s/\s+(T_\w+).*/\t\1 = C.\1/; p }

    /^#define\s+C_\w+/ { s/#define\s+(C_\w+).*/\t\1 Suffix = C.\1/; p }
    /^#define\s+D_\w+/ { s/#define\s+(D_\w+).*/\t\1 = C.\1/; p }
'
echo ")"
}

function opnames() {
cat <<EOF
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package go${GOCHAR}

var opnames = [ALAST+1]string{
EOF

cat $GOROOT/src/cmd/${GOCHAR}l/${GOCHAR}.out.h |
sed -n -r '/^\s+A\w+/ { s/\s+A(\w+),?.*/\tA\1: "\1",/; p }'
 
echo "}"

echo "var regnames = [256]string {"
cat $GOROOT/src/cmd/${GOCHAR}l/${GOCHAR}.out.h |
sed -n -r '
    /^\s+D_\w+/ { s/\s+D_(\w+),?.*/\tD_\1: "\1",/; p }
    /^#define\s+D_\w+/ { s/#define\s+D_(\w+).*/\tD_\1: "\1",/; p }
    '
echo "}"
}

GOCHAR=5
gen | gofmt > go5/obj.in.go
go tool cgo -godefs -- \
    -I$GOROOT/include \
    -I$GOROOT/src/cmd/5l go5/obj.in.go | gofmt > go5/obj.go
opnames | gofmt > go5/opnames.go

GOCHAR=6
gen | gofmt > go6/obj.in.go
go tool cgo -godefs -- \
    -I$GOROOT/include \
    -I$GOROOT/src/cmd/6l go6/obj.in.go | gofmt > go6/obj.go
opnames | gofmt > go6/opnames.go

GOCHAR=8
gen | gofmt > go8/obj.in.go
go tool cgo -godefs -- \
    -I$GOROOT/include \
    -I$GOROOT/src/cmd/8l go8/obj.in.go | gofmt > go8/obj.go
opnames | gofmt > go8/opnames.go

