<!--

lxc: linux Container library

(C) Copyright IBM Corp. 2007, 2008

Authors:
Daniel Lezcano <daniel.lezcano at free.fr>
Serge Hallyn <serge.hallyn at ubuntu.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA

Translated into Korean
by Sungbae Yoo <sungbae.yoo at samsung.com>

-->

<!DOCTYPE refentry PUBLIC @docdtd@ [

<!ENTITY commonoptions SYSTEM "@builddir@/common_options.sgml">
<!ENTITY seealso SYSTEM "@builddir@/see_also.sgml">
]>

<refentry>

  <docinfo><date>@LXC_GENERATE_DATE@</date></docinfo>

  <refmeta>
    <refentrytitle>lxc-clone</refentrytitle>
    <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>lxc-clone</refname>

    <refpurpose>
      <!--
      clone a new container from an existing one.
      -->
      존재하는 컨테이너를 새로운 컨테이너로 복제
    </refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>lxc-clone</command>
      <arg choice="opt">-s </arg>
      <arg choice="opt">-K </arg>
      <arg choice="opt">-M </arg>
      <arg choice="opt">-H </arg>
      <arg choice="opt">-B <replaceable>backingstore</replaceable></arg>
      <arg choice="opt">-L <replaceable>fssize</replaceable></arg>
      <arg choice="opt">-p <replaceable>lxcpath</replaceable></arg>
      <arg choice="opt">-P <replaceable>newlxcpath</replaceable></arg>
      <arg choice="opt">-R </arg>
      <arg choice="req">-o <replaceable>orig</replaceable></arg>
      <arg choice="req">-n <replaceable>new</replaceable></arg>
      <arg choice="opt">-- hook arguments</arg>
    </cmdsynopsis>
    <cmdsynopsis>
      <command>lxc-clone</command>
      <arg choice="opt">-s </arg>
      <arg choice="opt">-K </arg>
      <arg choice="opt">-M </arg>
      <arg choice="opt">-H </arg>
      <arg choice="opt">-B <replaceable>backingstore</replaceable></arg>
      <arg choice="opt">-L <replaceable>fssize</replaceable></arg>
      <arg choice="opt">-p <replaceable>lxcpath</replaceable></arg>
      <arg choice="opt">-P <replaceable>newlxcpath</replaceable></arg>
      <arg choice="opt">-R </arg>
      <arg choice="req">orig</arg>
      <arg choice="req">new</arg>
      <arg choice="opt">-- hook arguments</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title><!-- Description -->설명</title>

    <para>
      <!--
      <command>lxc-clone</command> Creates a new container as a clone of an existing
      container.  Two types of clones are supported: copy and snapshot.  A copy
      clone copies the root filessytem from the original container to the new.  A
      snapshot filesystem uses the backing store's snapshot functionality to create
      a very small copy-on-write snapshot of the original container.  Snapshot
      clones require the new container backing store to support snapshotting.  Currently
      this includes only aufs, btrfs, lvm, overlayfs and zfs.  LVM devices do not support
      snapshots of snapshots.
      -->
      <command>lxc-clone</command>는 존재하는 컨테이너를 복제하여 새로운 컨테이너를 생성한다. 복사, 스냅샷의 두가지 형태의 복제가 지원된다.
      복사는 원본 컨테이너의 루트 파일시스템을 그대로 새 컨테이너로 복사한다..
      스냅샷은 저장소의 스냅샷 기능을 이용하여 원본 컨테이너의 copy-on-write 형태로 매우 작은 스냅샷을 생성한다. 스냅샷을 사용하기 위해서는 새 컨테이너의 저장소가 스냅샷 기능을 지원하여야 한다. 현재 스냅샷 기능을 지원하는 것은 aufs, btrfs, lvm, overlayfs, zfs 정도이다. lvm은 스냅샷의 스냅샷은 지원하지 않는다.
    </para>

    <para>
      <!--
      The backing store of the new container will be the same type as the
      original container, with one exception, overlay containers.
      aufs and overlayfs snapshots can be created of directory backed
      containers.  This can be requested by using (for overlayfs) the
      <replaceable>-B overlayfs</replaceable> arguments.
      -->
      오버레이 컨테이너들을 제외하면, 새 컨테이너의 저장소는 원본과 같은 종류를 사용한다.
      aufs와 overlayfs의 스냅샷은 디렉토리로 구성된 컨테이너로 생성할 수 있다. overlayfs의 경우 <replaceable>-B overlayfs</replaceable> 인수를 통해 이를 지정할 수 있다.
    </para>

    <para>
      <!--
      The names of the original and new container can be given (in that order)
      after all options, or can be specified with the
      <replaceable>-o</replaceable> and <replaceable>-n</replaceable> options,
      respectively.
      -->
      원본 컨테이너와 새 컨테이너의 이름은 모든 옵션 뒤에 원본, 새 컨테이너 순으로 지정할 수 있다. 또는 <replaceable>-o</replaceable>과 <replaceable>-n</replaceable> 옵션을 사용하여 지정할 수 있다.
    </para>

  </refsect1>

  <refsect1>

    <title><!-- Options -->옵션</title>

    <variablelist>

      <varlistentry>
	<term>
	  <option>-s, --snapshot</option>
	</term>
	<listitem>
	  <para>
            <!--
	    The new container's rootfs will be a snapshot of the original. This option can be specified when the backing store is LVM, btrfs or zfs, and must be specified when you want to snapshot using aufs or overlayfs.
              -->
            새로 생성하는 컨테이너의 루트 파일시스템은 원본의 스냅샷으로 한다. 이 옵션은 저장소가 lvm, btrfs, zfs 일때 지정할 수 있다. 또한 aufs나 overlayfs를 이용한 스냅샷을 원할때만 지정해야 한다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-K, --keepname</option>
	</term>
	<listitem>
	  <para>
            <!--
	    Do not change the hostname of the container (in the root
	    filesystem).
            -->
            (루트 파일시스템에서) 컨테이너의 호스트 이름을 변경하지 않는다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-M, --keepmac</option>
	</term>
	<listitem>
	  <para>
            <!--
	    Use the same MAC address as the original container, rather than
	    generating a new random one.
            -->
            새로 무작위한 주소를 만들지 않고, 원본과 같은 MAC 주소를 사용한다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-H, --copyhooks</option>
	</term>
	<listitem>
	  <para>
            <!--
	    Copy all mount hooks into the new container's directory, and
	    update any lxcpaths and container names as needed.
            -->
            모든 마운트 훅들을 새 컨테이너의 디렉토리로 복사한다. 그리고 lxcpath와 컨테이너 이름을 필요에 따라 갱신한다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-L, --fssize <replaceable>fssize</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    In the case of a block device backed container, a size for the new
	    block device.  By default, the new device will be made the
	    same size as the original.
            -->
            블록장치로 구성된 컨테이너의 경우, 새로운 블록 장치의 크기.
            기본으로 새 디바이스는 원본과 같은 크기로 만들어진다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-p, --lxcpath <replaceable>lxcpath</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    The lxcpath of the original container.  By default, the system
	    wide configured lxcpath will be used.
            -->
            원본 컨테이너의 lxcpath. 기본값은 시스템 전역으로 설정되어 잇는 lxcpath를 사용한다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-P, --newpath <replaceable>newlxcpath</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    The lxcpath for the new container.  By default the same lxcpath
	    as the original will be used.  Note that with btrfs snapshots,
	    changing lxcpaths may not be possible, as subvolume snapshots
	    must be in the same btrfs filesystem.
            -->
            새로 생성될 컨테이너의 lxcpath.
            기본값은 원본 컨테이너의 lxcpath와 같다.
            btrfs의 스냅샷의 경우 lxcpath 변경이 불가능 할 수 있음을 주의해야 한다. 왜냐하면 서브볼륨 스냅샷이 같은 btrfs 파일시스템 내에 있어야 하기 때문이다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-B, --backingstore <replaceable>backingstore</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    Select a different backing store for the new container.  By
	    default the same as the original container's is used.  Note that
	    currently changing the backingstore is only supported for
	    aufs and overlayfs snapshots of directory backed containers.  Valid
	    backing stores include dir (directory), aufs, btrfs, lvm, zfs, loop
	    and overlayfs.
            -->
            새 컨테이너의 저장소를 선택한다.
            기본 값은 원본 컨테이너가 쓰던 것과 같은 것으로 되어 있다.
            현재 저장소를 다른 것으로 변경하는 것은 디렉토리로 구성된 컨테이너의 aufs와 overlayfs 스냅샷에서만 지원된다.
            가능한 값은 dir(디렉토리), aufs, btrfs, lvm zfs, loop 그리고 ovelayfs 이다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-R, --rename</option>
	</term>
	<listitem>
	  <para>
            <!--
	    Rename an existing container.
            <replaceable>orig</replaceable> is renamed <replaceable>new</replaceable>.
            -->
            컨테이너의 이름을 변경한다. <replaceable>orig</replaceable>를 <replaceable>new</replaceable>로 이름을 바꾼다.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>

	  <option>-o, --orig <replaceable>orig</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    The name of the original container to clone.
            -->
            복제할 원본 컨테이너의 이름.
	  </para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term>
	  <option>-n, --new <replaceable>new</replaceable></option>
	</term>
	<listitem>
	  <para>
            <!--
	    The name of the new container to create.
            -->
            생성할 새 컨테이너의 이름.
	  </para>
	</listitem>
      </varlistentry>


    </variablelist>

  </refsect1>

  <refsect1>
    <title>Clone hook</title>
    <para>
      <!--
      If the container being cloned has one or more <filename>lxc.hook.clone</filename>
      specified, then the specified hooks will be called for the new container.  The
      first 3 arguments passed to the clone hook will be the container name, a section
      ('lxc'), and the hook type ('clone').  Extra arguments passed
      <command>lxc-clone</command> will be passed to the hook program starting at
      argument 4.  The <filename>LXC_ROOTFS_MOUNT</filename> environment variable gives
      the path under which the container's root filesystem is mounted.  The
      configuration file pathname is stored in <filename>LXC_CONFIG_FILE</filename>, the
      new container name in <filename>LXC_NAME</filename>, the old container name in
      <filename>LXC_SRC_NAME</filename>, and the path or device on which
      the rootfs is located is in <filename>LXC_ROOTFS_PATH</filename>.
      -->
      만약 복제되는 컨테이너가 1개 이상의 <filename>lxc.hook.clone</filename>을 지정했다면, 지정된 훅은 새 컨테이너가 생성될 때 실행될 것이다.
      먼저 컨테이너 이름, 섹션('lxc'), 훅 종류('clone') 3개의 인수가 복제 훅에 전달 된다. 그리고 4번째 인수 부터는 <command>lxc-clone</command>로 넘겨줄 수 있다.
      <filename>LXC_ROOTFS_MOUNT</filename> 환경변수는 컨테이너의 루트 파일시스템이 마운트되어 있는 경로를 넘겨준다.
      새 컨테이너의 이름은 <filename>LXC_NAME</filename> 변수에, 이전 컨테이너의 이름은 <filename>LXC_SRC_NAME</filename> 환경변수에 담겨 있다. 그리고 루트 파일시스템이 위치하고 있는 곳은 <filename>LXC_ROOTFS_PATH</filename>로 넘겨준다.
    </para>
  </refsect1>

  <refsect1>
    <title><!-- Notes -->주의</title>
    <para>
      <!--
      <command>lxc-clone</command> is deprecated in favor of
      <command>lxc-copy</command>.
      -->
      <command>lxc-clone</command>는 <command>lxc-copy</command>로 대체되었으며, 제거될 예정이다.
    </para>
  </refsect1>

  &seealso;

  <refsect1>
    <title><!-- Author -->저자</title>
    <para>Serge Hallyn <email>serge.hallyn@ubuntu.com</email></para>
  </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
