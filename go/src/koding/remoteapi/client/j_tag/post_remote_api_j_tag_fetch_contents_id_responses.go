package j_tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// PostRemoteAPIJTagFetchContentsIDReader is a Reader for the PostRemoteAPIJTagFetchContentsID structure.
type PostRemoteAPIJTagFetchContentsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRemoteAPIJTagFetchContentsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRemoteAPIJTagFetchContentsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRemoteAPIJTagFetchContentsIDOK creates a PostRemoteAPIJTagFetchContentsIDOK with default headers values
func NewPostRemoteAPIJTagFetchContentsIDOK() *PostRemoteAPIJTagFetchContentsIDOK {
	return &PostRemoteAPIJTagFetchContentsIDOK{}
}

/*PostRemoteAPIJTagFetchContentsIDOK handles this case with default header values.

OK
*/
type PostRemoteAPIJTagFetchContentsIDOK struct {
	Payload *models.JTag
}

func (o *PostRemoteAPIJTagFetchContentsIDOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/JTag.fetchContents/{id}][%d] postRemoteApiJTagFetchContentsIdOK  %+v", 200, o.Payload)
}

func (o *PostRemoteAPIJTagFetchContentsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JTag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
