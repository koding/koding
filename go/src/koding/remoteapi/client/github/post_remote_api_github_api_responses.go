package github

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// PostRemoteAPIGithubAPIReader is a Reader for the PostRemoteAPIGithubAPI structure.
type PostRemoteAPIGithubAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRemoteAPIGithubAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRemoteAPIGithubAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostRemoteAPIGithubAPIUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRemoteAPIGithubAPIOK creates a PostRemoteAPIGithubAPIOK with default headers values
func NewPostRemoteAPIGithubAPIOK() *PostRemoteAPIGithubAPIOK {
	return &PostRemoteAPIGithubAPIOK{}
}

/*PostRemoteAPIGithubAPIOK handles this case with default header values.

Request processed succesfully
*/
type PostRemoteAPIGithubAPIOK struct {
	Payload *models.DefaultResponse
}

func (o *PostRemoteAPIGithubAPIOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/Github.api][%d] postRemoteApiGithubApiOK  %+v", 200, o.Payload)
}

func (o *PostRemoteAPIGithubAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefaultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRemoteAPIGithubAPIUnauthorized creates a PostRemoteAPIGithubAPIUnauthorized with default headers values
func NewPostRemoteAPIGithubAPIUnauthorized() *PostRemoteAPIGithubAPIUnauthorized {
	return &PostRemoteAPIGithubAPIUnauthorized{}
}

/*PostRemoteAPIGithubAPIUnauthorized handles this case with default header values.

Unauthorized request
*/
type PostRemoteAPIGithubAPIUnauthorized struct {
	Payload *models.UnauthorizedRequest
}

func (o *PostRemoteAPIGithubAPIUnauthorized) Error() string {
	return fmt.Sprintf("[POST /remote.api/Github.api][%d] postRemoteApiGithubApiUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRemoteAPIGithubAPIUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
