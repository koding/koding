package j_password_recovery

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"koding/remoteapi/models"
)

// PostRemoteAPIJPasswordRecoveryRecoverPasswordReader is a Reader for the PostRemoteAPIJPasswordRecoveryRecoverPassword structure.
type PostRemoteAPIJPasswordRecoveryRecoverPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRemoteAPIJPasswordRecoveryRecoverPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRemoteAPIJPasswordRecoveryRecoverPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRemoteAPIJPasswordRecoveryRecoverPasswordOK creates a PostRemoteAPIJPasswordRecoveryRecoverPasswordOK with default headers values
func NewPostRemoteAPIJPasswordRecoveryRecoverPasswordOK() *PostRemoteAPIJPasswordRecoveryRecoverPasswordOK {
	return &PostRemoteAPIJPasswordRecoveryRecoverPasswordOK{}
}

/*PostRemoteAPIJPasswordRecoveryRecoverPasswordOK handles this case with default header values.

Request processed succesfully
*/
type PostRemoteAPIJPasswordRecoveryRecoverPasswordOK struct {
	Payload *models.DefaultResponse
}

func (o *PostRemoteAPIJPasswordRecoveryRecoverPasswordOK) Error() string {
	return fmt.Sprintf("[POST /remote.api/JPasswordRecovery.recoverPassword][%d] postRemoteApiJPasswordRecoveryRecoverPasswordOK  %+v", 200, o.Payload)
}

func (o *PostRemoteAPIJPasswordRecoveryRecoverPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DefaultResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized creates a PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized with default headers values
func NewPostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized() *PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized {
	return &PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized{}
}

/*PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized handles this case with default header values.

Unauthorized request
*/
type PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized struct {
	Payload *models.UnauthorizedRequest
}

func (o *PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /remote.api/JPasswordRecovery.recoverPassword][%d] postRemoteApiJPasswordRecoveryRecoverPasswordUnauthorized  %+v", 401, o.Payload)
}

func (o *PostRemoteAPIJPasswordRecoveryRecoverPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UnauthorizedRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
