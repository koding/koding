package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// JProxyFilter j proxy filter
// swagger:model JProxyFilter
type JProxyFilter struct {

	// id
	ID string `json:"_id,omitempty"`

	// created at
	CreatedAt strfmt.Date `json:"createdAt,omitempty"`

	// modified at
	ModifiedAt strfmt.Date `json:"modifiedAt,omitempty"`

	// name
	// Required: true
	Name *string `json:"name"`

	// owner
	Owner string `json:"owner,omitempty"`

	// rules
	Rules []interface{} `json:"rules"`
}

// Validate validates this j proxy filter
func (m *JProxyFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JProxyFilter) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *JProxyFilter) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(m.Rules) { // not required
		return nil
	}

	for i := 0; i < len(m.Rules); i++ {

	}

	return nil
}
