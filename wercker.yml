# This file describes how to package klient.deb and uploads to a persistent
# storage Packaging is done if a push is made to `klientkite.development` or
# `klientkite.production` branches on `koding` repository.
#
# 1. If a push is made to either branches, a build number is created from the
# latest version number and incremented.
#
# 2. A Debian package (deb) is built with a version with a semantical versioning.
# Also a gzip file is created in the same directory.
#
# 3. These files are then uploaded to AWS S3 to `koding-klient` bucket in a
# directory called `development/$BUILDNO/{foo.0.1.0.gz,foo.0.1.0_amd64.deb}`
#
# For future readers who are humble like me to inspect these variables:
# KLIENT_CHANNEL: development/production
# S3_KLIENTKITE: koding-klient
box: koding/base@0.0.12

build:
  steps:
    - script:
        name: build go binaries
        code: go/build.sh

deploy:
  steps:
    - script:
        name: configure s3cmd (temporary workaround)
        code: |
          echo '[default]' > ~/.s3cfg
          echo "access_key=$S3_KEY_ID" >> ~/.s3cfg
          echo "secret_key=$S3_KEY_SECRET" >> ~/.s3cfg

          # Shortcut to s3://koding-klient/development directory
          export S3DIR="s3://$S3_KLIENTKITE/$KLIENT_CHANNEL"

          # Fetch the latest build number since wercker doesn't provide one
          s3cmd get $S3DIR/latest-version.txt version
          export OLDBUILDNO=$(cat version)
          export NEWBUILDNO=$(($OLDBUILDNO+1))
          echo "New version will be: $NEWBUILDNO"
          rm -f version

    - script:
        name: package klient.deb
        code: |
          # Create klient.0.1.x.gz
          export GOPATH=$PWD/go
          go run go/package.go -a klient -e $KLIENT_CHANNEL -b $NEWBUILDNO
          go build -v -ldflags "-X koding/kites/klient/protocol.Version 0.1.$NEWBUILDNO -X koding/kites/klient/protocol.Environment $KLIENT_CHANNEL" koding/kites/klient
          gzip -N klient
          mv klient.gz klient-0.1.$NEWBUILDNO.gz

    - script:
        name: sync with s3
        code: |
          #  Copy files to S3.
          s3cmd -P put *.deb  $S3DIR/$NEWBUILDNO/
          s3cmd -P put *.gz  $S3DIR/$NEWBUILDNO/

          # Cleanup the latest/ folder and put the latest one in there
          s3cmd del --recursive $S3DIR/latest/
          s3cmd -P put *.deb  $S3DIR/latest/
          s3cmd -P put *.gz  $S3DIR/latest/

          # Update latest-version.txt with the latest version
          s3cmd del $S3DIR/latest-version.txt
          echo $NEWBUILDNO > latest-version.txt
          s3cmd -P put latest-version.txt  $S3DIR/latest-version.txt

  after-steps:
    - sherzberg/slack-notify@0.0.11:
        token: $KLIENT_SLACK_TOKEN
        subdomain: koding
        username: wercker
        channel: "#announce"
        passed-message: "klient/$KLIENT_CHANNEL: A new klient (ver. $NEWBUILDNO) is successfuly built and deployed."
        failed-message: "klient/$KLIENT_CHANNEL: New Klient could not be built or deployed. See $WERCKER_DEPLOY_URL for the details."
